# Lineas 8, 9 y 10 son para testear de manera independiente el rol como playbook

# - hosts: all
#   become: yes
#   tasks:

# Incluyo archivo de variables
  - name: Incluyo variables    
    include_vars:
      dir: /home/damian/obligatorio_2021_08/lamp/group_vars
      extensions:
      - 'yml'

  #### Debian ####
  - name: Instalo MySQL y sus dependencies
    apt: 
      name: "{{ packages }}"
      state: present
    vars:
        packages:         
        - mysql-server
        - mysql-client      
        - python3-pip
        - python3-mysqldb
    when: ansible_facts['os_family'] == "Debian"

  #### RedHat ###
  - name: Instalo MySQL y sus dependencies
    yum: 
      name: "{{ packages }}"
      state: present
    vars:
        packages:
        - mysql-server
        #- mysql-client
        - mysql
        - python3-pip
        - python3-mysql
        #- python3-mysqlclient
        #- python3-mysqldb
        #- python-pymysql
        #- MySQL-python        
    when: ansible_facts['os_family'] == "RedHat"

  - name: Instalo MySQL-python
    pip:
      name: mysql-connector-python
      executable: pip3
      state: present

  - name: Instalo MySQL-python
    pip:
      name: PyMySQL
      executable: pip3
      state: present

  #### RedHat ###
  - name: Configuro SELinux para dejar conectar con el motor mysql en cualquier puerto
    seboolean: name=mysql_connect_any state=true persistent=yes
    when: ansible_facts['os_family'] == "RedHat"

  - name: Creo el archivo de configuracion para Mysql
    template:      
      src: ../templates/my.cnf.j2
      dest: /etc/my.cnf
      owner: mysql
      group: mysql
      mode: u=rw,g=rw,o=r

  - name: Creo archivos de log de MySQL
    file:
      path: /var/log/mysqld.log
      state: touch
      owner: mysql
      group: mysql
      mode: '0775'

  - name: Creo socket de MySQL
    file:
      path: /var/lib/mysql/mysql.sock
      state: touch
      owner: mysql
      group: mysql
      mode: '0775'    

  - name: Creo el directorio para PID de MySQL
    file:
      path: /var/run/mysqld
      state: directory
      owner: mysql
      group: mysql
      mode: '0775'

  #### RedHat ###
  - name: Levanto MySQL
    service: name=mysqld state=started enabled=yes
    when: ansible_facts['os_family'] == "RedHat"

  #### Debian ###
  - name: Levanto MySQL
    service: name=mysql state=started enabled=yes
    when: ansible_facts['os_family'] == "Debian"

  #### RedHat ###
  - name: Levanto firewalld
    service: name=firewalld state=started enabled=yes
    when: ansible_facts['os_family'] == "RedHat"

  #### Debian ###
  - name: Levanto ufw
    service: name=ufw state=started enabled=yes
    when: ansible_facts['os_family'] == "Debian"

  #### RedHat ###
  - name: inserto regla de firewalld
    firewalld: port={{ mysql_port }}/tcp permanent=true state=enabled immediate=yes
    when: ansible_facts['os_family'] == "RedHat"

  #### Debian ####
  # Creo la regla de ufw para MySQL
  - name: inserto regla de ufw
    ufw:
      rule: allow
      port: "{{ mysql_port }}"
      proto: tcp
    when: ansible_facts['os_family'] == "Debian"

  #### RedHat ###
  - name: Create Application Database
    mysql_db:      
      name: "{{ dbname }}"
      state: present
    when: ansible_facts['os_family'] == "RedHat"

  #### Debian ###
  - name: Create Application Database
    mysql_db:
      login_unix_socket: /var/run/mysqld/mysqld.sock
      name: "{{ dbname }}"
      state: present
    when: ansible_facts['os_family'] == "Debian"   

  ### Debian ###
  - name: Borrar usuario anonimo
    no_log: true
    mysql_user:      
      login_unix_socket: /var/run/mysqld/mysqld.sock
      name: ''
      host: localhost
      state: absent
    when: ansible_facts['os_family'] == "Debian"  
  
  ### RedHat ###
  - name: Borrar usuario anonimo
    no_log: true
    mysql_user:      
      name: ''
      host: localhost
      state: absent
    when: ansible_facts['os_family'] == "RedHat"

  ### RedHat ###
  - name: Create Application DB User
    no_log: true
    mysql_user:
      name: "{{ dbuser }}"
      password: "{{ upassword }}"
      priv: '{{ dbname }}.*:ALL,GRANT'
      state: present
    when: ansible_facts['os_family'] == "RedHat"
  
  ### Debian ###
  - name: Create Application DB User
    no_log: true
    mysql_user:
      login_unix_socket: /var/run/mysqld/mysqld.sock
      name: "{{ dbuser }}"
      password: "{{ upassword }}"
      priv: '{{ dbname }}.*:ALL,GRANT'
      state: present
    when: ansible_facts['os_family'] == "Debian"