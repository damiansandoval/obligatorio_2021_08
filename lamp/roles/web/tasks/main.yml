# Este rol contiene todas las tareas y configuraciones necesarias
# para dejar operativo el servidor web Apache con soporte para
# contenido PHP - Optimizado para realizar las tareas en RedHat y Debian


# Lineas 8, 9 y 10 son para testear de manera independiente el rol como playbook

# - hosts: all
#   become: yes
#   tasks:


# Incluir variables del archivo de variables
  - name: Incluir variables
    include_vars: ../../../group_vars/all.yml

#### Instalacion de apache y php ####

#### RedHat ###
  - name: RedHat - Instalar httpd y php
    yum: 
      name: "{{ packages }}"
      state: present
    vars:
        packages:
        - httpd
        - php
        - php-mysqlnd
    when: ansible_facts['os_family'] == "RedHat"

####  Debian ####
  - name: Debian - Instalar httpd y php
    apt: 
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - apache2
      - php
      - libapache2-mod-php
      - php-mysqlnd
    when: ansible_facts['os_family'] == "Debian"

#### Instalacion de git ###

### RedHat ###
  - name: RedHat - Instalar Git
    yum: 
      name: "{{ item }}" 
      state: present
    vars:
      item:
      - git
    when: ansible_facts['os_family'] == "RedHat"

### Debian ###
  - name: Debian - Instalar Git
    apt: 
      name: "{{ item }}" 
      state: present
    vars:
      item:
      - git
    when: ansible_facts['os_family'] == "Debian"
   
#Configuraciones de firewall para apache y comunicacion con mysql   
    
#### RedHat ####
#Iniciar servicio firewalld
  - name: RedHat - Iniciar firewalld
    service: name=firewalld state=started enabled=yes
    when: ansible_facts['os_family'] == "RedHat"

# Creacion de regla de firewalld para httpd
  - name: RedHat - Insertar regla de firewalld para httpd
    firewalld: port={{ httpd_port }}/tcp permanent=true state=enabled immediate=yes
    when: ansible_facts['os_family'] == "RedHat"

# Inicio y habilitacion de servicio httpd
  - name: RedHat - iniciar y habilitar httpd
    service: name=httpd state=started enabled=yes
    when: ansible_facts['os_family'] == "RedHat"

#### Debian ####
# Creacion de regla de ufw para httpd
  - name: Debian - Permitir acceso al puerto 80
    ufw:
      rule: allow
      port: "{{ httpd_port }}"
      proto: tcp
    when: ansible_facts['os_family'] == "Debian"
# Reinicio servicios ufw y apache
  - name: Debian - Reiniciar ufw 
    service:
      name: ufw
      state: restarted
      enabled: yes
    when: ansible_facts['os_family'] == "Debian"

  - name: Debian - reiniciar apache
    service:
      name: apache2
      state: restarted
      enabled: yes
    when: ansible_facts['os_family'] == "Debian"
    
# Configuracion de SELinux para conexiones entre apache y mysql - RedHat
  - name: RedHat - Permitir a httpd conectar con mysql
    seboolean:
      name: httpd_can_network_connect_db
      persistent: yes
      state: yes
    when: ansible_facts['os_family'] == "RedHat"

# Estas tareas se encargan de copiar el contenido del repositorio en dev/production.
# Configuraciones comunes

  - name: Copiar codigo del repositorio
    git: repo={{ repository }} dest=/var/www/html/

  - name: Crear el archivo index.php
    template: src=../templates/index.php.j2 dest=/var/www/html/index.php